{
  "name": "<%= projectName %>",
  "description": "<%= projectName %> is a spa project that is generated by yeoman generator-react-koa.",
  "version": "1.0.0",
  "private": true,
  "engines": {
    "node": "8.2.1",
    "pm2": "2.6.1"
  },
  "browserslist": [
    ">1%",
    "last 4 versions",
    "Firefox ESR",
    "not ie < 9"
  ],
  "dependencies": {
    "koa": "^2.4.1",
    "react": "^16.2.0",
    "react-dom": "^16.2.0",
    "react-redux": "^5.0.6",
    "redux": "^3.7.2"
  },
  "devDependencies": {
    "webpack": "^3.10.0"
  },
  "babel": {
    "presets": [
      [
        "env",
        {
          "targets": {
            "node": "current"
          }
        }
      ],
      "stage-2",
      "react"
    ],
    "plugins": [
      "transform-decorators-legacy"
    ],
    "env": {
      "test": {
        "plugins": [
          "rewire"
        ]
      }
    }
  },
  "stylelint": {
    "extends": "stylelint-config-standard",
    "rules": {
      "string-quotes": "single",
      "property-no-unknown": [
        true,
        {
          "ignoreProperties": [
            "composes"
          ]
        }
      ],
      "selector-pseudo-class-no-unknown": [
        true,
        {
          "ignorePseudoClasses": [
            "global"
          ]
        }
      ]
    }
  },
  "lint-staged": {
    "*.{cmd,html,json,md,sh,txt,xml,yml}": [
      "editorconfig-tools fix",
      "git add"
    ],
    "*.{js,jsx}": [
      "eslint --fix",
      "git add"
    ],
    "*.{css,less,scss,sss}": [
      "stylefmt",
      "stylelint",
      "git add"
    ]
  },
  "scripts": {
    "lint:js": "eslint src scripts --fix",
    "lint:css": "stylelint \"src/**/*.{css,less,scss,sss}\"",
    "lint:staged": "lint-staged",
    "lint": "yarn run lint:js && yarn run lint:css",
    "test": "NODE_ENV=development jest --config config/jest.config.js",
    "test:commit": "NODE_ENV=development jest --config config/jest.commit.config.js",
    "test:watch": "yarn run test -- --watchAll",
    "clean": "babel-node scripts/run clean",
    "copy": "babel-node scripts/run copy",
    "bundle": "babel-node scripts/run bundle",
    "compile": "babel-node scripts/run compile",
    "build:stats": "babel-node scripts/run build --analyse",
    "deploy": "babel-node scripts/run deploy",
    "mock": "nodemon -w mock -w script/mockServer.js --exec 'babel-node' scripts/run mockServer",
    "server": "babel-node scripts/run runServer",
    "start": "babel-node scripts/run start & yarn run mock",
    "precommit-msg": "echo 'Pre-commit checks...' && exit 0"
  },
  "pre-commit": {
    "run": [
      "precommit-msg", "test:commit"
    ],
    "silent": true
  }
}
