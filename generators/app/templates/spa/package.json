{
  "name": "fe-fission-node",
  "group": "com.wacai.creditcard",
  "description": "spa is a spa project that is generated by yeoman generator-react-koa.",
  "version": "1.0.0",
  "private": true,
  "engines": {
    "node": "8.9.4",
    "pm2": "2.9.1"
  },
  "browserslist": [
    ">1%",
    "last 4 versions",
    "Firefox ESR",
    "not ie < 9"
  ],
  "dependencies": {
    "@wac/isomorphic-router": "^1.0.2",
    "@wac/koa-logger": "^1.5.2",
    "@wac/lotus-stat": "^3.0.0",
    "axios": "^0.17.1",
    "babel-polyfill": "^6.26.0",
    "fastclick": "^1.0.6",
    "history": "^4.7.2",
    "isomorphic-style-loader": "^4.0.0",
    "koa": "^2.4.1",
    "koa-bodyparser": "^4.2.0",
    "koa-cookie": "^1.0.0",
    "koa-router": "^7.3.0",
    "koa-session": "^5.8.1",
    "koa-static": "^4.0.2",
    "lodash": "^4.17.4",
    "prop-types": "^15.6.0",
    "raf": "^3.4.0",
    "react": "^16.2.0",
    "react-dom": "^16.2.0",
    "react-motion": "^0.5.2",
    "react-redux": "^5.0.6",
    "redux": "^3.7.2",
    "redux-logger": "^3.0.6",
    "redux-thunk": "^2.2.0",
    "serialize-javascript": "^1.4.0",
    "source-map-support": "^0.5.2",
    "universal-router": "^5.1.0"
  },
  "devDependencies": {
    "@wac/static-deploy": "^2.0.0",
    "@wac/wac-less-loader": "^1.0.3",
    "assets-webpack-plugin": "^3.5.1",
    "autoprefixer": "^7.2.5",
    "babel-cli": "^6.26.0",
    "babel-core": "^6.26.0",
    "babel-loader": "^7.1.2",
    "babel-plugin-rewire": "^1.1.0",
    "babel-plugin-transform-decorators-legacy": "^1.3.4",
    "babel-plugin-transform-react-jsx-self": "^6.22.0",
    "babel-plugin-transform-react-jsx-source": "^6.22.0",
    "babel-preset-env": "^1.6.1",
    "babel-preset-react": "^6.24.1",
    "babel-preset-stage-2": "^6.24.1",
    "browser-sync": "^2.23.5",
    "css-loader": "^0.28.9",
    "dev-ip": "^1.0.1",
    "execa": "^0.9.0",
    "front-matter": "^2.3.0",
    "glob": "^7.1.2",
    "js-yaml": "^3.10.0",
    "koa-jsonp": "^2.0.2",
    "less": "^2.3.1",
    "less-loader": "^4.0.5",
    "markdown-it": "^8.4.0",
    "mkdirp": "^0.5.1",
    "nodemon": "^1.14.11",
    "postcss-flexbugs-fixes": "^3.3.0",
    "postcss-loader": "^2.0.10",
    "postcss-media-minmax": "^3.0.0",
    "postcss-selector-not": "^3.0.1",
    "react-hot-loader": "^3.1.3",
    "resolve-url-loader": "^2.2.1",
    "rimraf": "^2.6.2",
    "webpack": "^3.10.0",
    "webpack-bundle-analyzer": "^2.9.2",
    "webpack-dev-middleware": "^2.0.4",
    "webpack-hot-middleware": "^2.21.0",
    "webpack-node-externals": "^1.6.0",
    "webpack-plugin-hash-output": "^1.3.0",
    "write-file-webpack-plugin": "^4.2.0"
  },
  "stylelint": {
    "extends": "stylelint-config-standard",
    "rules": {
      "string-quotes": "single",
      "property-no-unknown": [
        true,
        {
          "ignoreProperties": [
            "composes"
          ]
        }
      ],
      "selector-pseudo-class-no-unknown": [
        true,
        {
          "ignorePseudoClasses": [
            "global"
          ]
        }
      ]
    }
  },
  "lint-staged": {
    "*.{cmd,html,json,md,sh,txt,xml,yml}": [
      "editorconfig-tools fix",
      "git add"
    ],
    "*.{js,jsx}": [
      "eslint --fix",
      "git add"
    ],
    "*.{css,less,scss,sss}": [
      "stylefmt",
      "stylelint",
      "git add"
    ]
  },
  "scripts": {
    "lint:js": "eslint src scripts --fix",
    "lint:css": "stylelint \"src/**/*.{css,less,scss,sss}\"",
    "lint:staged": "lint-staged",
    "lint": "yarn run lint:js && yarn run lint:css",
    "test": "NODE_ENV=development jest --config config/jest.config.js",
    "test:commit": "NODE_ENV=development jest --config config/jest.commit.config.js",
    "test:watch": "yarn run test -- --watchAll",
    "clean": "babel-node scripts/run clean",
    "copy": "babel-node scripts/run copy",
    "bundle": "babel-node scripts/run bundle",
    "compile": "babel-node scripts/run compile",
    "build:stats": "babel-node scripts/run build --analyse",
    "deploy": "babel-node scripts/run deploy",
    "mock": "nodemon -w mock -w script/mockServer.js --exec 'babel-node' scripts/run mockServer",
    "server": "babel-node scripts/run runServer",
    "start": "babel-node scripts/run start & npm run mock",
    "precommit-msg": "echo 'Pre-commit checks...' && exit 0",
    "build:dev": "babel-node scripts/devBuild.js"
  },
  "pre-commit": {
    "run": [
      "precommit-msg",
      "test:commit"
    ],
    "silent": true
  }
}
